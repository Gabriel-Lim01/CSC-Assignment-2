#pragma checksum "C:\Users\Gabriel\Desktop\Poly stuff\CSC\CSC Assignment 2\TheLifeTimeTalents\Views\Home\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "1a3cf07ea4adae95bba42a3e0683eab1bb4c93fa"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_Index), @"mvc.1.0.view", @"/Views/Home/Index.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Home/Index.cshtml", typeof(AspNetCore.Views_Home_Index))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "C:\Users\Gabriel\Desktop\Poly stuff\CSC\CSC Assignment 2\TheLifeTimeTalents\Views\_ViewImports.cshtml"
using TheLifeTimeTalents;

#line default
#line hidden
#line 2 "C:\Users\Gabriel\Desktop\Poly stuff\CSC\CSC Assignment 2\TheLifeTimeTalents\Views\_ViewImports.cshtml"
using TheLifeTimeTalents.Models;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"1a3cf07ea4adae95bba42a3e0683eab1bb4c93fa", @"/Views/Home/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"749dea2950bf919e74914922d2fb05f3ce34aef0", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("rel", new global::Microsoft.AspNetCore.Html.HtmlString("stylesheet"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/Scripts/fonts/fontawesome/css/fontawesome-all.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/Scripts/fonts/material-design-iconic-font/css/materialdesignicons.min.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("dataForm"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("role", new global::Microsoft.AspNetCore.Html.HtmlString("form"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_5 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("form-horizontal"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_6 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("detailsModalForm"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_7 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("editModalForm"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#line 1 "C:\Users\Gabriel\Desktop\Poly stuff\CSC\CSC Assignment 2\TheLifeTimeTalents\Views\Home\Index.cshtml"
  
    ViewData["Title"] = "Home Page";

#line default
#line hidden
            BeginContext(45, 2, true);
            WriteLiteral("\r\n");
            EndContext();
            BeginContext(10195, 2, true);
            WriteLiteral("\r\n");
            EndContext();
            BeginContext(10197, 84, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "363c7749440c4fe2b7c8fe621e4eba8a", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(10281, 2, true);
            WriteLiteral("\r\n");
            EndContext();
            BeginContext(10283, 108, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "b84f0c3f83e84b4f9d79e17f73663870", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(10391, 4792, true);
            WriteLiteral(@"


<style>
    .list-group-item list-group-item-danger {
        width: 500px !important;
    }

    #noty_center_layout_container {
        width: 500px !important;
    }

    .modal-header .close {
        margin-top: -21px;
    }

    .modal-header-edit {
        background-color: cornflowerblue;
        border-top-left-radius: 0;
        border-top-right-radius: 0;
    }

        .modal-header-edit .close {
            color: white;
            text-shadow: 0 1px 0 #000;
            opacity: 2.5;
        }

    .modal-confirm {
        color: #636363;
        width: 400px;
        top: 115px;
    }

        .modal-confirm .modal-content {
            border-radius: 5px;
            border: none;
            text-align: center;
            font-size: 14px;
        }

        .modal-confirm .modal-header-delete {
            border-bottom: none;
            position: relative;
        }

        .modal-confirm h4 {
            text-align: center;
            f");
            WriteLiteral(@"ont-size: 26px;
        }

        .modal-confirm .close {
            top: -5px;
            right: -2px;
            color: white;
            text-shadow: 0 1px 0 #000;
            opacity: 2.5;
        }

        .modal-confirm .modal-body {
            color: #999;
        }

        .modal-confirm .modal-footer {
            border: none;
            text-align: center;
            border-radius: 5px;
            font-size: 13px;
            padding: 10px 70px 25px;
        }

            .modal-confirm .modal-footer a {
                color: #999;
            }

        .modal-confirm .icon-box {
            width: 80px;
            height: 80px;
            margin: 0 auto;
            border-radius: 50%;
            z-index: 9;
            text-align: center;
            border: 3px solid #f15e5e;
        }

            .modal-confirm .icon-box i {
                color: #f15e5e;
                font-size: 46px;
                display: inline-block;
         ");
            WriteLiteral(@"       margin-top: 3px;
                margin-right: 0;
            }

    .modal-header-delete {
        background-color: #f15e5e;
        margin-bottom: 10px;
    }

    .trigger-btn {
        display: inline-block;
        margin-left: 13px;
        color: red;
    }

    .edit, .edit:hover {
        color: blue;
    }

    .imgContainer {
        position: relative;
    }

    #uploadhover {
        cursor: pointer;
    }

    .editImgbutton {
        position: absolute;
        width: 200px;
        left: 0;
        top: 80px;
        text-align: center;
        opacity: 0;
        transition: opacity .35s ease;
    }

        .editImgbutton a {
            width: 200px;
            padding: 12px 48px;
            text-align: center;
            color: white;
            background-color: rgba(71, 143, 225, 0.8);
            z-index: 4;
            font-size: 0.85rem;
        }

    .imgContainer:hover .editImgbutton {
        opacity: 1;
    }
</style>");
            WriteLiteral(@"
<div class=""panel  panel-primary"">
    <div class=""panel-heading"">
        Manage Session Synopses
        <div class=""btn-group pull-right"" style=""margin-top: -7px;"">
            <button href=""#exampleModal"" class=""btn btn-default btn-group-lg "" data-toggle=""modal"" data-target=""#exampleModal"">Add Talent</button>
        </div>
    </div>
    <div class=""panel-body"">
        <div class=""row"">
            <div class=""col-md-12"">
                <table class=""table table-striped"">
                    <thead>
                        <tr>
                            <th>id</th>
                            <th>Photo</th>
                            <th>Name</th>
                            <th>Short Name</th>
                            <th>Edit</th>
                            <th>Delete</th>
                            <th>Details</th>
                            <th>Comment</th>
                        </tr>
                    </thead>
                    <tbody id=""talentsTableBody""><");
            WriteLiteral(@"/tbody>
                </table>
            </div>
        </div>
    </div>
</div>

<!-- Add Modal -->
<div class=""modal fade"" id=""exampleModal"" tabindex=""-1"" role=""dialog"" aria-labelledby=""exampleModalLabel"" aria-hidden=""true"">
    <div class=""modal-dialog"" role=""document"">
        <div class=""modal-content"">
            <div class=""modal-header"">
                <h5 class=""modal-title"" id=""exampleModalLabel"">Create Talent Record</h5>
                <a href=""#"" class=""close"" data-dismiss=""modal"" aria-label=""Close"">
                    <span aria-hidden=""true"">&times;</span>
                </a>
            </div>
            <div class=""modal-body"">
                ");
            EndContext();
            BeginContext(15183, 2566, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "cb7f3f8fe64f4437b89f97d634eefff0", async() => {
                BeginContext(15239, 2503, true);
                WriteLiteral(@"
                    <input onchange=""return fileValidation()"" type=""file"" id=""fileInput"" style=""padding: 2px;"" />
                    <div class=""form-group"">
                        <div class=""imgContainer"" style=""display:none;"">
                            <img id=""changeImage"" style=""width:200px;"" />
                        </div>
                    </div>
                    <div class=""form-group"">
                        <label class=""control-label col-md-5"" for=""TalentNameInput"">Name</label>
                        <div class=""col-md-5"">
                            <input type=""text"" id=""TalentNameInput"" name=""TalentNameInput"" class=""form-control input-group-sm""
                                   maxlength=""30"" value="""" />
                        </div>
                    </div>
                    <div class=""form-group"">
                        <label class=""control-label col-md-5"" for=""TalentShortNameInput"">Short Name</label>
                        <div class=""col-md-5"">
      ");
                WriteLiteral(@"                      <input type=""text"" id=""TalentShortNameInput"" name=""TalentShortNameInput"" class=""form-control input-group-sm""
                                   maxlength=""30"" value="""" />
                        </div>
                    </div>
                    <div class=""form-group"">
                        <label class=""control-label col-md-5"" for=""TalentReknownInput"">Reknown</label>
                        <div class=""col-md-5"">
                            <input type=""text"" id=""TalentReknownInput"" name=""TalentReknownInput"" class=""form-control input-group-sm""
                                   maxlength=""30"" value="""" />
                        </div>
                    </div>
                    <div class=""form-group"">
                        <label class=""control-label col-md-5"" for=""TalentBioInput"">Bio</label>
                        <div class=""col-md-5"">
                            <textarea id=""TalentBioInput"" name=""TalentBioInput"" class=""form-control""></textarea>
          ");
                WriteLiteral(@"              </div>
                    </div>
                    <div class=""modal-footer"">
                        <button type=""button"" onclick=""addRecord();"" class=""btn btn-primary"" value=""Add"" id=""addButton""><i class=""fa fa-spinner fa-spin fa-2x hidden"" id=""createSpinner"" style=""margin-right:5px;""></i>Add</button>
                        <button type=""reset"" class=""btn btn-grey"">Clear</button>
                    </div>

                ");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(17749, 734, true);
            WriteLiteral(@"
            </div>
        </div>
    </div>
</div>

<!-- Details Modal -->
<div class=""modal fade"" id=""detailsModal"" tabindex=""-1"" role=""dialog"" aria-labelledby=""detailsModalLabel"" aria-hidden=""true"">
    <div class=""modal-dialog"" role=""document"">
        <div class=""modal-content"">
            <div class=""modal-header modal-header-details"" style=""background-color:antiquewhite"">
                <h5 class=""modal-title"" id=""exampleModalLabel"" style=""color:black;"">Details</h5>
                <a href=""#"" class=""close"" data-dismiss=""modal"" aria-label=""Close"">
                    <span aria-hidden=""true"">&times;</span>
                </a>
            </div>
            <div class=""modal-body"">
                ");
            EndContext();
            BeginContext(18483, 2360, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "274e12ae24be46f78bd0a157ab1f5b95", async() => {
                BeginContext(18547, 2289, true);
                WriteLiteral(@"
                    <div class=""form-group"">
                        <div class=""col-md-5"">
                            <img id=""DetailsTalentpicInput"" name=""DetailsTalentpicInput"" />
                        </div>
                    </div>
                    <div class=""form-group"">
                        <label class=""control-label col-md-5"" for=""DetailsTalentNameInput"">Name</label>
                        <div class=""col-md-5"">
                            <input type=""text"" id=""DetailsTalentNameInput"" name=""DetailsTalentNameInput"" class=""form-control input-group-sm""
                                   maxlength=""30"" value="""" disabled />
                        </div>
                    </div>
                    <div class=""form-group"">
                        <label class=""control-label col-md-5"" for=""DetailsTalentShortNameInput"">Short Name</label>
                        <div class=""col-md-5"">
                            <input type=""text"" id=""DetailsTalentShortNameInput"" name=""Detail");
                WriteLiteral(@"sTalentShortNameInput"" class=""form-control input-group-sm""
                                   maxlength=""30"" value="""" disabled />
                        </div>
                    </div>
                    <div class=""form-group"">
                        <label class=""control-label col-md-5"" for=""DetailsTalentReknownInput"">Rekown</label>
                        <div class=""col-md-5"">
                            <input type=""text"" id=""DetailsTalentReknownInput"" name=""DetailsTalentReknownInput"" class=""form-control input-group-sm""
                                   maxlength=""30"" value="""" disabled />
                        </div>
                    </div>
                    <div class=""form-group"">
                        <label class=""control-label col-md-5"" for=""DetailsTalentBioInput"">Bio</label>
                        <div class=""col-md-5"">
                            <textarea id=""DetailsTalentBioInput"" name=""DetailsTalentBioInput"" class=""form-control"" disabled></textarea>
              ");
                WriteLiteral("          </div>\r\n                    </div>\r\n                    <div class=\"modal-footer\">\r\n                        <button type=\"button\" class=\"btn btn-info\" data-dismiss=\"modal\">Back</button>\r\n                    </div>\r\n                ");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_6);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(20843, 686, true);
            WriteLiteral(@"
            </div>
        </div>
    </div>
</div>

<!-- Edit Modal -->
<div class=""modal fade"" id=""editModal"" tabindex=""-1"" role=""dialog"" aria-labelledby=""editModalLabel"" aria-hidden=""true"">
    <div class=""modal-dialog"" role=""document"">
        <div class=""modal-content"">
            <div class=""modal-header modal-header-edit"">
                <h5 class=""modal-title"" id=""exampleModalLabel"" style=""color:white;"">Edit Item</h5>
                <a href=""#"" class=""close"" data-dismiss=""modal"" aria-label=""Close"">
                    <span aria-hidden=""true"">&times;</span>
                </a>
            </div>
            <div class=""modal-body"">
                ");
            EndContext();
            BeginContext(21529, 2797, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "1c3d7d353dac4ab483de986693e6f10c", async() => {
                BeginContext(21590, 2729, true);
                WriteLiteral(@"
                    <div class=""imgContainer"">
                        <img alt=""upload"" style=""width:200px; margin-top: -14px;"" id=""editPhoto"">
                        <div onclick=""$('#newphoto').click();"" class=""editImgbutton""><a href=""#""> Change Photo </a></div>
                        <input id='newphoto' onchange=""editPhotoFunction(this); del = true;"" type='file' style=""display: none;"" />
                    </div>
                    <div class=""form-group"">
                        <label class=""control-label col-md-5"" for=""UpdateTalentNameInput"">Name</label>
                        <div class=""col-md-5"">
                            <input type=""text"" id=""UpdateTalentNameInput"" name=""UpdateTalentNameInput"" class=""form-control input-group-sm""
                                   maxlength=""30"" value="""" />
                        </div>
                    </div>
                    <div class=""form-group"">
                        <label class=""control-label col-md-5"" for=""UpdateTalentShortN");
                WriteLiteral(@"ameInput"">Short Name</label>
                        <div class=""col-md-5"">
                            <input type=""text"" id=""UpdateTalentShortNameInput"" name=""UpdateTalentShortNameInput"" class=""form-control input-group-sm""
                                   maxlength=""30"" value="""" />
                        </div>
                    </div>
                    <div class=""form-group"">
                        <label class=""control-label col-md-5"" for=""UpdateTalentReknownInput"">Reknown</label>
                        <div class=""col-md-5"">
                            <input type=""text"" id=""UpdateTalentReknownInput"" name=""UpdateTalentReknownInput"" class=""form-control input-group-sm""
                                   maxlength=""30"" value="""" />
                        </div>
                    </div>
                    <div class=""form-group"">
                        <label class=""control-label col-md-5"" for=""UpdateTalentBioInput"">Bio</label>
                        <div class=""col-md-5"">
    ");
                WriteLiteral(@"                        <textarea id=""UpdateTalentBioInput"" name=""UpdateTalentBioInput"" class=""form-control""></textarea>
                        </div>
                    </div>
                    <input type=""hidden"" id=""editId"" />
                    <div class=""modal-footer"">
                        <button type=""reset"" class=""btn btn-grey"" onclick=""resetEdit()"">Reset</button>
                        <button type=""button"" onclick=""updateTalent()"" class=""btn btn-success"" value=""Save"" id=""saveButton""><i class=""fa fa-spinner fa-spin fa-2x hidden"" id=""updateEditSpinner"" style=""margin-right:5px;""></i>Save Changes</button>
                    </div>
                ");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_7);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(24326, 1142, true);
            WriteLiteral(@"
            </div>
        </div>
    </div>
</div>

<!-- Delete Modal -->
<div id=""myModal"" class=""modal fade"">
    <div class=""modal-dialog modal-confirm"">
        <div class=""modal-content"">
            <div class=""modal-header modal-header-delete"">
                <h5 class=""modal-title"" id=""exampleModalLabel"" style=""color:white;"">Delete Talent Record</h5>
                <a href=""#"" class=""close"" data-dismiss=""modal"" aria-label=""Close"">
                    <span aria-hidden=""true"">&times;</span>
                </a>
            </div>
            <div class=""icon-box"">
                <i class=""m-r-10 mdi mdi-close""></i>
            </div>
            <div class=""modal-body"">
                <p id=""deleteRec""></p>
                <input type=""hidden"" id=""deleteId"" />
            </div>
            <div class=""modal-footer"">
                <button type=""button"" class=""btn btn-info"" data-dismiss=""modal"">Cancel</button>
                <button type=""button"" onclick=""deleteRecord()");
            WriteLiteral("\" id=\"DeleteTalent\" class=\"btn btn-danger\">Delete</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n");
            EndContext();
            DefineSection("Scripts", async() => {
                BeginContext(25486, 5787, true);
                WriteLiteral(@"
    <script>
        loadTalentsData();
        //Bucket Configurations
        //var bucketName = 'spcscca2';
        //var bucketRegion = 'us-east-1';
        //var IdentityPoolId = ""us-east-1:a20b1a53-df5c-4c6f-b110-e06d14830c69"";
        //AWS.config.update({
        //    region: bucketRegion,
        //    credentials: new AWS.CognitoIdentityCredentials({
        //        IdentityPoolId: IdentityPoolId
        //    })
        //});
        //var s3 = new AWS.S3({
        //    apiVersion: '2006-03-01',
        //    params: { Bucket: bucketName }
        //});
        //function addRecord() {
        //    var s3 = new AWS.S3({
        //        params: { Bucket: 'spcscca2' }
        //    });
        //    var file = document.getElementById('fileInput').files[0];
        //    var fileUrl = 'https://' + bucketName + '.s3.amazonaws.com/' + file.name;

        //    if (file) {
        //        console.log(""ready to upload!"");
        //        s3.putObject({
        //    ");
                WriteLiteral(@"        Key: file.name,
        //            ContentType: file.type,
        //            Body: file,
        //            ACL: ""public-read""
        //        },
        //            function (err, data) {
        //                if (data !== null) {
        //                    alert(""Got it!"");
        //                    uploadToRDS(fileUrl);
        //                }
        //                else {
        //                    alert(""Upload failed!"");
        //                }
        //            });
        //    }
        //    else {
        //        console.log(""cannot find"");
        //    }
        //}
        function loadTalentsData() {
            $loadTalentsDataHandler = jQuery.ajax({
                url: '/api/Talents',
                method: 'GET',
                dataType: 'json',
                cache: false,
                tryCount: 0,
                retryLimit: 3,
                error: function (xhr, textStatus, errorThrown) {
           ");
                WriteLiteral(@"         if (textStatus == 'timeout') {
                        this.tryCount++;
                        if (this.tryCount <= this.retryLimit) {
                            //try again
                            $.ajax(this);
                            return;
                        }
                        return;
                    }
                }
            }).done(function (data, textStatus, jqXHR) {
                console.log(data);
                var talentsList = data;
                var talentId = """";
                var talent;
                var talentName = """";
                var talentShortName = """";
                var talentReknown = """";
                var talentBio = """";
                var $tableElement = null;
                var $cellElement = null;
                var $rowElement = null;
                $tableBodyElement = $('#talentsTableBody');
                for (index = 0; index < talentsList.length; index++) {
                    talent = talent");
                WriteLiteral(@"sList[index];
                    talentId = talent.id;
                    talentName = talent.name;
                    talentShortName = talent.shortName;
                    talentReknown = talent.reknown;
                    talentBio = talent.bio;
                    $rowElement = $('<tr></tr>');
                    $cellElement = $('<td></td>', { text: talentId });
                    $rowElement.append($cellElement);
                    $cellElement = $('<td></td>');
                    //$imgElement = $(`<img src='${urlForCloudImage + talent.ShortName + ""_tn.jpg""}'>`);
                    $imgElement = $(`<img src='${talent.Photo}'>`);
                    $cellElement.append($imgElement);
                    $rowElement.append($cellElement);
                    $cellElement = $('<td></td>', { text: talentName });
                    $rowElement.append($cellElement);
                    $cellElement = $('<td></td>', { text: talentShortName });
                    $rowElement.append($c");
                WriteLiteral(@"ellElement);
                    $hyperLinkElement = $('<a class=""edit"" data-toggle=""modal"" onclick=""loadEdit(' + talentId + ')""><i class=""fa fa-edit""></i></a>').attr(""href"", ""#editModal"");
                    $cellElement = $('<td></td>');
                    $cellElement.append($hyperLinkElement);
                    $rowElement.append($cellElement);
                    $hyperLinkElement = $('<a class=""trigger-btn"" data-toggle=""modal"" onclick=""loadDelete(' + talentId + ')""><i class=""fa fa-trash mr-1""></i></a>').attr(""href"", ""#myModal"");
                    $cellElement = $('<td></td>');
                    $cellElement.append($hyperLinkElement);
                    $rowElement.append($cellElement);
                    $hyperLinkElement = $('<a class=""details"" href=""/Talents/Details/' + talentId + '"">Details</button>').addClass('btn btn-warning');
                    $cellElement = $('<td></td>');
                    $cellElement.append($hyperLinkElement);
                    $rowElement.append($");
                WriteLiteral(@"cellElement);
                    $hyperLinkElement = $('<a class=""details"" href=""/Talents/Comment/' + talentId + '"">Comment</button>').addClass('btn btn-info');
                    $cellElement = $('<td></td>');
                    $cellElement.append($hyperLinkElement);
                    $rowElement.append($cellElement);
                    //Insert the $rowElement into the table element represented by $tableElement.
                    $tableBodyElement.append($rowElement);
                }//end of for loop.
            }//end of JavaScript anonymous function
            )//end of the done() method;
        }
        /**/
        </script>
");
                EndContext();
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
